INFO 05-27 01:06:06 [__init__.py:239] Automatically detected platform cuda.
INFO 05-27 01:06:12 [config.py:689] This model supports multiple tasks: {'classify', 'reward', 'embed', 'score', 'generate'}. Defaulting to 'generate'.
WARNING 05-27 01:06:12 [arg_utils.py:1731] --kv-transfer-config is not supported by the V1 Engine. Falling back to V0. 
WARNING 05-27 01:06:12 [arg_utils.py:1592] Chunked prefill is enabled by default for models with max_model_len > 32K. Chunked prefill might not work with some features or models. If you encounter any issues, please disable by launching with --enable-chunked-prefill=False.
INFO 05-27 01:06:12 [config.py:1901] Chunked prefill is enabled with max_num_batched_tokens=4096.
INFO 05-27 01:06:12 [llm_engine.py:243] Initializing a V0 LLM engine (v0.8.4) with config: model='/workspace/llm_models/llama-3.1-model/Llama-3.1-8B-Instruct', speculative_config=None, tokenizer='/workspace/llm_models/llama-3.1-model/Llama-3.1-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=100000, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='auto', reasoning_backend=None), observability_config=ObservabilityConfig(show_hidden_metrics=False, otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=None, served_model_name=/workspace/llm_models/llama-3.1-model/Llama-3.1-8B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 05-27 01:06:13 [cuda.py:292] Using Flash Attention backend.
INFO 05-27 01:06:16 [parallel_state.py:959] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0
INFO 05-27 01:06:17 [lmcache_connector.py:43] Initializing LMCacheConfig under kv_transfer_config kv_connector='LMCacheConnector' kv_buffer_device='cuda' kv_buffer_size=1000000000.0 kv_role='kv_both' kv_rank=None kv_parallel_size=1 kv_ip='127.0.0.1' kv_port=14579 kv_connector_extra_config={}
INFO 05-27 01:06:55 [model_runner.py:1110] Starting to load model /workspace/llm_models/llama-3.1-model/Llama-3.1-8B-Instruct...
INFO 05-27 01:07:01 [loader.py:458] Loading weights took 6.21 seconds
INFO 05-27 01:07:01 [model_runner.py:1146] Model loading took 14.9889 GiB and 6.329585 seconds
INFO 05-27 01:07:02 [worker.py:267] Memory profiling takes 0.50 seconds
INFO 05-27 01:07:02 [worker.py:267] the current vLLM instance can use total_gpu_memory (79.11GiB) x gpu_memory_utilization (0.60) = 47.47GiB
INFO 05-27 01:07:02 [worker.py:267] model weights take 14.99GiB; non_torch_memory takes 0.47GiB; PyTorch activation peak memory takes 1.23GiB; the rest of the memory reserved for KV Cache is 30.78GiB.
INFO 05-27 01:07:02 [executor_base.py:112] # cuda blocks: 15759, # CPU blocks: 2048
INFO 05-27 01:07:02 [executor_base.py:117] Maximum concurrency for 100000 tokens per request: 2.52x
INFO 05-27 01:07:03 [model_runner.py:1456] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 05-27 01:07:12 [model_runner.py:1598] Graph capturing finished in 9 secs, took 0.26 GiB
INFO 05-27 01:07:12 [llm_engine.py:449] init engine (profile, create kv cache, warmup model) took 10.65 seconds
[93mStorageManager::contains called for key vllm@/workspace/llm_models/llama-3.1-model/Llama-3.1-8B-Instruct@1@0@78256f077c621b56c0c34cc0c2ddc785a979c7b1f68c375d8acfe24d82ee41e5 with search range None[0m
> /workspace/external/LMCache/lmcache/experimental/cache_engine.py(231)store()
-> print(f"LMCacheEngine::store number of tokens to store: {len(tokens)}")
(Pdb) 